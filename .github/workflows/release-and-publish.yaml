name: Release and Publish

on:
  push:
    branches:
      - main

permissions: write-all

jobs:
  createTag:
    runs-on: ubuntu-latest
    outputs:
      tagName: ${{ steps.createTag.outputs.tagName }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Pull Version From Gradle
        run: |
          echo "TAG_NAME=`gradle properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}'`" >> $GITHUB_ENV
      - name: Create Tag
        id: createTag
        uses: actions/github-script@v6
        with:
          script: |
            const { TAG_NAME } = process.env;
            
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/v${TAG_NAME}`,
              sha: context.sha
            });
            
            core.setOutput('tagName', TAG_NAME);

  createRelease:
    runs-on: ubuntu-latest
    needs: createTag
    env:
      TAG_NAME: ${{ needs.createTag.outputs.tagName }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Create Release
        uses: actions/github-script@v6
        with:
          script: |
            const { TAG_NAME } = process.env;

            const response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${TAG_NAME}`,
              name: `Release v${TAG_NAME}`
            });
            
            console.log(response.data.id);
            core.exportVariable('RELEASE_ID', response.id);

  publishPackage:
    needs: createRelease
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'corretto'
      - name: Publish Package
        run: gradle publish
        env:
          GITHUB_USER: ${{ secrets.USER }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}